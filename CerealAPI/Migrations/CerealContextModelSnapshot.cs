// <auto-generated />
using CerealAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CerealAPI.Migrations
{
    [DbContext(typeof(CerealContext))]
    partial class CerealContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CerealAPI.Model.Cereal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<float>("Carbo")
                        .HasColumnType("float");

                    b.Property<float>("CupsPerServing")
                        .HasColumnType("float");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<float>("Fiber")
                        .HasColumnType("float");

                    b.Property<string>("MfrShortform")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Potass")
                        .HasColumnType("int");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("Shelf")
                        .HasColumnType("int");

                    b.Property<int>("Sodium")
                        .HasColumnType("int");

                    b.Property<int>("Sugars")
                        .HasColumnType("int");

                    b.Property<string>("TypeShortform")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Vitamins")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MfrShortform");

                    b.HasIndex("TypeShortform");

                    b.ToTable("Cereals");
                });

            modelBuilder.Entity("CerealAPI.Model.Manufacturer", b =>
                {
                    b.Property<string>("Shortform")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Shortform");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("CerealAPI.Model.Type", b =>
                {
                    b.Property<string>("Shortform")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Shortform");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("CerealAPI.Model.Cereal", b =>
                {
                    b.HasOne("CerealAPI.Model.Manufacturer", "Mfr")
                        .WithMany()
                        .HasForeignKey("MfrShortform")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CerealAPI.Model.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeShortform")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mfr");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
